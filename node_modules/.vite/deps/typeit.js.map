{
  "version": 3,
  "sources": ["../../typeit/dist/index.es.js"],
  "sourcesContent": ["// TypeIt by Alex MacArthur - https://typeitjs.com\nconst isArray = (thing) => Array.isArray(thing);\nconst asArray = (value) => {\n  return isArray(value) ? value : [value];\n};\nlet Queue = function(initialItems) {\n  let add = function(steps) {\n    asArray(steps).forEach((step) => {\n      return _q.set(Symbol(step.char?.innerText), buildQueueItem({ ...step }));\n    });\n    return this;\n  };\n  let getTypeable = () => rawValues().filter((value) => value.typeable);\n  let set = function(index, item) {\n    let keys = [..._q.keys()];\n    _q.set(keys[index], buildQueueItem(item));\n  };\n  let buildQueueItem = (queueItem) => {\n    queueItem.shouldPauseCursor = function() {\n      return Boolean(this.typeable || this.cursorable || this.deletable);\n    };\n    return queueItem;\n  };\n  let reset = function() {\n    _q.forEach((item) => delete item.done);\n  };\n  let wipe = function() {\n    _q = /* @__PURE__ */ new Map();\n    add(initialItems);\n  };\n  let getQueue = () => _q;\n  let rawValues = () => Array.from(_q.values());\n  let destroy = (key) => _q.delete(key);\n  let getItems = (all = false) => all ? rawValues() : rawValues().filter((i) => !i.done);\n  let done = (key, shouldDestroy = false) => shouldDestroy ? _q.delete(key) : _q.get(key).done = true;\n  let _q = /* @__PURE__ */ new Map();\n  add(initialItems);\n  return {\n    add,\n    set,\n    wipe,\n    reset,\n    destroy,\n    done,\n    getItems,\n    getQueue,\n    getTypeable\n  };\n};\nconst toArray = (val) => Array.from(val);\nconst createTextNode = (content) => document.createTextNode(content);\nlet expandTextNodes = (element) => {\n  [...element.childNodes].forEach((child) => {\n    if (child.nodeValue) {\n      [...child.nodeValue].forEach((c) => {\n        child.parentNode.insertBefore(createTextNode(c), child);\n      });\n      child.remove();\n      return;\n    }\n    expandTextNodes(child);\n  });\n  return element;\n};\nconst getParsedBody = (content) => {\n  let doc = document.implementation.createHTMLDocument();\n  doc.body.innerHTML = content;\n  return expandTextNodes(doc.body);\n};\nconst DATA_ATTRIBUTE = \"data-typeit-id\";\nconst CURSOR_CLASS = \"ti-cursor\";\nconst END = \"END\";\nconst DEFAULT_STATUSES = {\n  started: false,\n  completed: false,\n  frozen: false,\n  destroyed: false\n};\nconst DEFAULT_OPTIONS = {\n  breakLines: true,\n  cursor: {\n    autoPause: true,\n    autoPauseDelay: 500,\n    animation: {\n      frames: [0, 0, 1].map((n) => {\n        return { opacity: n };\n      }),\n      options: {\n        iterations: Infinity,\n        easing: \"steps(2, start)\",\n        fill: \"forwards\"\n      }\n    }\n  },\n  cursorChar: \"|\",\n  cursorSpeed: 1e3,\n  deleteSpeed: null,\n  html: true,\n  lifeLike: true,\n  loop: false,\n  loopDelay: 750,\n  nextStringDelay: 750,\n  speed: 100,\n  startDelay: 250,\n  startDelete: false,\n  strings: [],\n  waitUntilVisible: false,\n  beforeString: () => {\n  },\n  afterString: () => {\n  },\n  beforeStep: () => {\n  },\n  afterStep: () => {\n  },\n  afterComplete: () => {\n  }\n};\nconst PLACEHOLDER_CSS = `[${DATA_ATTRIBUTE}]:before {content: '.'; display: inline-block; width: 0; visibility: hidden;}`;\nfunction walkElementNodes(element, shouldReverse = false, shouldIncludeCursor = false) {\n  let cursor = element.querySelector(`.${CURSOR_CLASS}`);\n  let walker = document.createTreeWalker(element, NodeFilter.SHOW_ALL, {\n    acceptNode: (node) => {\n      if (cursor && shouldIncludeCursor) {\n        if (node.classList?.contains(CURSOR_CLASS)) {\n          return NodeFilter.FILTER_ACCEPT;\n        }\n        if (cursor.contains(node)) {\n          return NodeFilter.FILTER_REJECT;\n        }\n      }\n      return node.classList?.contains(CURSOR_CLASS) ? NodeFilter.FILTER_REJECT : NodeFilter.FILTER_ACCEPT;\n    }\n  });\n  let nextNode;\n  let nodes = [];\n  while (nextNode = walker.nextNode()) {\n    if (!nextNode.originalParent) {\n      nextNode.originalParent = nextNode.parentNode;\n    }\n    nodes.push(nextNode);\n  }\n  return shouldReverse ? nodes.reverse() : nodes;\n}\nfunction chunkStringAsHtml(string) {\n  return walkElementNodes(getParsedBody(string));\n}\nfunction maybeChunkStringAsHtml(str, asHtml = true) {\n  return asHtml ? chunkStringAsHtml(str) : toArray(str).map(createTextNode);\n}\nconst createElement = (el) => document.createElement(el);\nconst appendStyleBlock = (styles, id = \"\") => {\n  let styleBlock = createElement(\"style\");\n  styleBlock.id = id;\n  styleBlock.appendChild(createTextNode(styles));\n  document.head.appendChild(styleBlock);\n};\nconst calculateDelay = (delayArg) => {\n  if (!isArray(delayArg)) {\n    delayArg = [delayArg / 2, delayArg / 2];\n  }\n  return delayArg;\n};\nconst randomInRange = (value, range2) => {\n  return Math.abs(\n    Math.random() * (value + range2 - (value - range2)) + (value - range2)\n  );\n};\nlet range = (val) => val / 2;\nfunction calculatePace(options) {\n  let { speed, deleteSpeed, lifeLike } = options;\n  deleteSpeed = deleteSpeed !== null ? deleteSpeed : speed / 3;\n  return lifeLike ? [\n    randomInRange(speed, range(speed)),\n    randomInRange(deleteSpeed, range(deleteSpeed))\n  ] : [speed, deleteSpeed];\n}\nconst destroyTimeouts = (timeouts) => {\n  timeouts.forEach(clearTimeout);\n  return [];\n};\nconst generateHash = () => Math.random().toString().substring(2, 9);\nconst isInput = (el) => \"value\" in el;\nlet getAllChars = (element) => {\n  if (isInput(element)) {\n    return toArray(element.value);\n  }\n  return walkElementNodes(element, true).filter(\n    (c) => !(c.childNodes.length > 0)\n  );\n};\nconst fireWhenVisible = (element, func) => {\n  let observer = new IntersectionObserver(\n    (entries, observer2) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          func();\n          observer2.unobserve(element);\n        }\n      });\n    },\n    { threshold: 1 }\n  );\n  observer.observe(element);\n};\nlet handleFunctionalArg = (arg) => {\n  return typeof arg === \"function\" ? arg() : arg;\n};\nconst isNumber = (value) => Number.isInteger(value);\nlet select = (selector, element = document, all = false) => {\n  return element[`querySelector${all ? \"All\" : \"\"}`](selector);\n};\nlet isBodyElement = (node) => /body/i.test(node?.tagName);\nlet insertIntoElement = (originalTarget, character) => {\n  if (isInput(originalTarget)) {\n    originalTarget.value = `${originalTarget.value}${character.textContent}`;\n    return;\n  }\n  character.innerHTML = \"\";\n  let target = isBodyElement(character.originalParent) ? originalTarget : character.originalParent || originalTarget;\n  target.insertBefore(\n    character,\n    select(\".\" + CURSOR_CLASS, target) || null\n  );\n};\nlet updateCursorPosition = (steps, cursorPosition, printedCharacters) => {\n  return Math.min(\n    Math.max(cursorPosition + steps, 0),\n    printedCharacters.length\n  );\n};\nconst merge = (originalObj, newObj) => Object.assign({}, originalObj, newObj);\nconst removeNode = (node, rootElement) => {\n  if (!node)\n    return;\n  let nodeParent = node.parentNode;\n  let nodeToRemove = nodeParent.childNodes.length > 1 || nodeParent.isSameNode(rootElement) ? node : nodeParent;\n  nodeToRemove.remove();\n};\nconst repositionCursor = (element, allChars, newCursorPosition) => {\n  let nodeToInsertBefore = allChars[newCursorPosition - 1];\n  let cursor = select(`.${CURSOR_CLASS}`, element);\n  element = nodeToInsertBefore?.parentNode || element;\n  element.insertBefore(cursor, nodeToInsertBefore || null);\n};\nfunction selectorToElement(thing) {\n  return typeof thing === \"string\" ? select(thing) : thing;\n}\nconst isNonVoidElement = (el) => /<(.+)>(.*?)<\\/(.+)>/.test(el.outerHTML);\nlet wait = (callback, delay, timeouts) => {\n  return new Promise((resolve) => {\n    let cb = async () => {\n      await callback();\n      resolve();\n    };\n    timeouts.push(setTimeout(cb, delay || 0));\n  });\n};\nlet cursorFontStyles = {\n  \"font-family\": \"\",\n  \"font-weight\": \"\",\n  \"font-size\": \"\",\n  \"font-style\": \"\",\n  \"line-height\": \"\",\n  color: \"\",\n  transform: \"translateX(-.125em)\"\n};\nlet setCursorStyles = (id, element) => {\n  let rootSelector = `[${DATA_ATTRIBUTE}='${id}']`;\n  let cursorSelector = `${rootSelector} .${CURSOR_CLASS}`;\n  let computedStyles = getComputedStyle(element);\n  let customProperties = Object.entries(cursorFontStyles).reduce(\n    (accumulator, [item, value]) => {\n      return `${accumulator} ${item}: var(--ti-cursor-${item}, ${value || computedStyles[item]});`;\n    },\n    \"\"\n  );\n  appendStyleBlock(\n    `${cursorSelector} { display: inline-block; width: 0; ${customProperties} }`,\n    id\n  );\n};\nconst duplicate = (value, times) => new Array(times).fill(value);\nconst countStepsToSelector = ({\n  queueItems,\n  selector,\n  cursorPosition,\n  to\n}) => {\n  if (isNumber(selector)) {\n    return selector * -1;\n  }\n  let isMovingToEnd = new RegExp(END, \"i\").test(to);\n  let selectorIndex = selector ? [...queueItems].reverse().findIndex(({ char }) => {\n    let parentElement = char.parentElement;\n    let parentMatches = parentElement.matches(selector);\n    if (isMovingToEnd && parentMatches) {\n      return true;\n    }\n    return parentMatches && parentElement.firstChild.isSameNode(char);\n  }) : -1;\n  if (selectorIndex < 0) {\n    selectorIndex = isMovingToEnd ? 0 : queueItems.length - 1;\n  }\n  let offset = isMovingToEnd ? 0 : 1;\n  return selectorIndex - cursorPosition + offset;\n};\nlet beforePaint = (cb) => {\n  return new Promise((resolve) => {\n    requestAnimationFrame(async () => {\n      resolve(await cb());\n    });\n  });\n};\nlet getAnimationFromElement = (element) => {\n  return element?.getAnimations().find((animation) => {\n    return animation.id === element.dataset.tiAnimationId;\n  });\n};\nlet setCursorAnimation = ({\n  cursor,\n  frames,\n  options\n}) => {\n  let animation = cursor.animate(frames, options);\n  animation.pause();\n  animation.id = cursor.dataset.tiAnimationId;\n  beforePaint(() => {\n    beforePaint(() => {\n      animation.play();\n    });\n  });\n  return animation;\n};\nlet rebuildCursorAnimation = ({\n  cursor,\n  options,\n  cursorOptions\n}) => {\n  if (!cursor || !cursorOptions)\n    return;\n  let animation = getAnimationFromElement(cursor);\n  let oldCurrentTime;\n  if (animation) {\n    options.delay = animation.effect.getComputedTiming().delay;\n    oldCurrentTime = animation.currentTime;\n    animation.cancel();\n  }\n  let newAnimation = setCursorAnimation({\n    cursor,\n    frames: cursorOptions.animation.frames,\n    options\n  });\n  if (oldCurrentTime) {\n    newAnimation.currentTime = oldCurrentTime;\n  }\n  return newAnimation;\n};\nlet execute = (queueItem) => queueItem.func?.call(null);\nlet fireItem = async ({\n  index,\n  queueItems,\n  wait: wait2,\n  cursor,\n  cursorOptions\n}) => {\n  let queueItem = queueItems[index][1];\n  let instantQueue = [];\n  let tempIndex = index;\n  let futureItem = queueItem;\n  let shouldBeGrouped = () => futureItem && !futureItem.delay;\n  let shouldPauseCursor = queueItem.shouldPauseCursor() && cursorOptions.autoPause;\n  while (shouldBeGrouped()) {\n    instantQueue.push(futureItem);\n    shouldBeGrouped() && tempIndex++;\n    futureItem = queueItems[tempIndex] ? queueItems[tempIndex][1] : null;\n  }\n  if (instantQueue.length) {\n    await beforePaint(async () => {\n      for (let q of instantQueue) {\n        await execute(q);\n      }\n    });\n    return tempIndex - 1;\n  }\n  let animation = getAnimationFromElement(cursor);\n  let options;\n  if (animation) {\n    options = {\n      ...animation.effect.getComputedTiming(),\n      delay: shouldPauseCursor ? cursorOptions.autoPauseDelay : 0\n    };\n  }\n  await wait2(async () => {\n    if (animation && shouldPauseCursor) {\n      animation.cancel();\n    }\n    await beforePaint(() => {\n      execute(queueItem);\n    });\n  }, queueItem.delay);\n  await rebuildCursorAnimation({\n    cursor,\n    options,\n    cursorOptions\n  });\n  return index;\n};\nlet processCursorOptions = (cursorOptions) => {\n  if (typeof cursorOptions === \"object\") {\n    let newOptions = {};\n    let { frames: defaultFrames, options: defaultOptions } = DEFAULT_OPTIONS.cursor.animation;\n    newOptions.animation = cursorOptions.animation || {};\n    newOptions.animation.frames = cursorOptions.animation?.frames || defaultFrames;\n    newOptions.animation.options = merge(\n      defaultOptions,\n      cursorOptions.animation?.options || {}\n    );\n    newOptions.autoPause = cursorOptions.autoPause ?? DEFAULT_OPTIONS.cursor.autoPause;\n    newOptions.autoPauseDelay = cursorOptions.autoPauseDelay || DEFAULT_OPTIONS.cursor.autoPauseDelay;\n    return newOptions;\n  }\n  if (cursorOptions === true) {\n    return DEFAULT_OPTIONS.cursor;\n  }\n  return cursorOptions;\n};\nconst TypeIt = function(element, options = {}) {\n  let _wait = async (callback, delay, silent = false) => {\n    if (_statuses.frozen) {\n      await new Promise((resolve) => {\n        this.unfreeze = () => {\n          _statuses.frozen = false;\n          resolve();\n        };\n      });\n    }\n    silent || await _opts.beforeStep(this);\n    await wait(callback, delay, _timeouts);\n    silent || await _opts.afterStep(this);\n  };\n  let _fireItemWithContext = (index, queueItems) => {\n    return fireItem({\n      index,\n      queueItems,\n      wait: _wait,\n      cursor: _cursor,\n      cursorOptions: _opts.cursor\n    });\n  };\n  let _removeNode = (node) => removeNode(node, _element);\n  let _elementIsInput = () => isInput(_element);\n  let _getPace = (index = 0) => calculatePace(_opts)[index];\n  let _getAllChars = () => getAllChars(_element);\n  let _maybeAppendPause = (opts = {}) => {\n    let delay = opts.delay;\n    delay && _queue.add({ delay });\n  };\n  let _queueAndReturn = (steps, opts) => {\n    _queue.add(steps);\n    _maybeAppendPause(opts);\n    return this;\n  };\n  let _getDerivedCursorPosition = () => _predictedCursorPosition ?? _cursorPosition;\n  let _generateTemporaryOptionQueueItems = (newOptions = {}) => {\n    return [\n      { func: () => _options(newOptions) },\n      { func: () => _options(_opts) }\n    ];\n  };\n  let _addSplitPause = (items) => {\n    let delay = _opts.nextStringDelay;\n    _queue.add([{ delay: delay[0] }, ...items, { delay: delay[1] }]);\n  };\n  let _setUpCursor = () => {\n    if (_elementIsInput()) {\n      return;\n    }\n    let cursor = createElement(\"span\");\n    cursor.className = CURSOR_CLASS;\n    if (!_shouldRenderCursor) {\n      cursor.style.visibility = \"hidden\";\n      return cursor;\n    }\n    cursor.innerHTML = getParsedBody(_opts.cursorChar).innerHTML;\n    return cursor;\n  };\n  let _attachCursor = async () => {\n    !_elementIsInput() && _cursor && _element.appendChild(_cursor);\n    if (_shouldRenderCursor) {\n      setCursorStyles(_id, _element);\n      _cursor.dataset.tiAnimationId = _id;\n      let { animation } = _opts.cursor;\n      let { frames, options: options2 } = animation;\n      setCursorAnimation({\n        frames,\n        cursor: _cursor,\n        options: {\n          duration: _opts.cursorSpeed,\n          ...options2\n        }\n      });\n    }\n  };\n  let _generateQueue = () => {\n    let strings = _opts.strings.filter((string) => !!string);\n    strings.forEach((string, index) => {\n      this.type(string);\n      if (index + 1 === strings.length) {\n        return;\n      }\n      let splitItems = _opts.breakLines ? [{ func: () => _type(createElement(\"BR\")), typeable: true }] : duplicate(\n        {\n          func: _delete,\n          delay: _getPace(1)\n        },\n        _queue.getTypeable().length\n      );\n      _addSplitPause(splitItems);\n    });\n  };\n  let _prepLoop = async (delay) => {\n    let derivedCursorPosition = _getDerivedCursorPosition();\n    derivedCursorPosition && await _move({ value: derivedCursorPosition });\n    let queueItems = _getAllChars().map((c) => {\n      return [\n        Symbol(),\n        {\n          func: _delete,\n          delay: _getPace(1),\n          deletable: true,\n          shouldPauseCursor: () => true\n        }\n      ];\n    });\n    for (let index = 0; index < queueItems.length; index++) {\n      await _fireItemWithContext(index, queueItems);\n    }\n    _queue.reset();\n    _queue.set(0, { delay });\n  };\n  let _maybePrependHardcodedStrings = (strings) => {\n    let existingMarkup = _element.innerHTML;\n    if (!existingMarkup) {\n      return strings;\n    }\n    _element.innerHTML = \"\";\n    if (_opts.startDelete) {\n      _element.innerHTML = existingMarkup;\n      expandTextNodes(_element);\n      _addSplitPause(\n        duplicate(\n          {\n            func: _delete,\n            delay: _getPace(1),\n            deletable: true\n          },\n          _getAllChars().length\n        )\n      );\n      return strings;\n    }\n    let hardCodedStrings = existingMarkup.replace(/<!--(.+?)-->/g, \"\").trim().split(/<br(?:\\s*?)(?:\\/)?>/);\n    return hardCodedStrings.concat(strings);\n  };\n  let _fire = async (remember = true) => {\n    _statuses.started = true;\n    let cleanUp = (qKey) => {\n      _queue.done(qKey, !remember);\n    };\n    try {\n      let queueItems = [..._queue.getQueue()];\n      for (let index = 0; index < queueItems.length; index++) {\n        let [queueKey, queueItem] = queueItems[index];\n        if (queueItem.done)\n          continue;\n        if (!queueItem.deletable || queueItem.deletable && _getAllChars().length) {\n          let newIndex = await _fireItemWithContext(index, queueItems);\n          Array(newIndex - index).fill(index + 1).map((x, y) => x + y).forEach((i) => {\n            let [key] = queueItems[i];\n            cleanUp(key);\n          });\n          index = newIndex;\n        }\n        cleanUp(queueKey);\n      }\n      if (!remember) {\n        return this;\n      }\n      _statuses.completed = true;\n      await _opts.afterComplete(this);\n      if (!_opts.loop) {\n        throw \"\";\n      }\n      let delay = _opts.loopDelay;\n      _wait(async () => {\n        await _prepLoop(delay[0]);\n        _fire();\n      }, delay[1]);\n    } catch (e) {\n    }\n    return this;\n  };\n  let _move = async (step) => {\n    _cursorPosition = updateCursorPosition(\n      step,\n      _cursorPosition,\n      _getAllChars()\n    );\n    repositionCursor(_element, _getAllChars(), _cursorPosition);\n  };\n  let _type = (char) => insertIntoElement(_element, char);\n  let _options = async (opts) => _opts = merge(_opts, opts);\n  let _empty = async () => {\n    if (_elementIsInput()) {\n      _element.value = \"\";\n      return;\n    }\n    _getAllChars().forEach(_removeNode);\n    return;\n  };\n  let _delete = () => {\n    let allChars = _getAllChars();\n    if (!allChars.length)\n      return;\n    if (_elementIsInput()) {\n      _element.value = _element.value.slice(0, -1);\n    } else {\n      _removeNode(allChars[_cursorPosition]);\n    }\n  };\n  this.break = function(actionOpts) {\n    return _queueAndReturn(\n      {\n        func: () => _type(createElement(\"BR\")),\n        typeable: true\n      },\n      actionOpts\n    );\n  };\n  this.delete = function(numCharacters = null, actionOpts = {}) {\n    numCharacters = handleFunctionalArg(numCharacters);\n    let bookEndQueueItems = _generateTemporaryOptionQueueItems(actionOpts);\n    let num = numCharacters;\n    let { instant, to } = actionOpts;\n    let typeableQueueItems = _queue.getTypeable();\n    let rounds = (() => {\n      if (num === null) {\n        return typeableQueueItems.length;\n      }\n      if (isNumber(num)) {\n        return num;\n      }\n      return countStepsToSelector({\n        queueItems: typeableQueueItems,\n        selector: num,\n        cursorPosition: _getDerivedCursorPosition(),\n        to\n      });\n    })();\n    return _queueAndReturn(\n      [\n        bookEndQueueItems[0],\n        ...duplicate(\n          {\n            func: _delete,\n            delay: instant ? 0 : _getPace(1),\n            deletable: true\n          },\n          rounds\n        ),\n        bookEndQueueItems[1]\n      ],\n      actionOpts\n    );\n  };\n  this.empty = function(actionOpts = {}) {\n    return _queueAndReturn({ func: _empty }, actionOpts);\n  };\n  this.exec = function(func, actionOpts = {}) {\n    let bookEndQueueItems = _generateTemporaryOptionQueueItems(actionOpts);\n    return _queueAndReturn(\n      [bookEndQueueItems[0], { func: () => func(this) }, bookEndQueueItems[1]],\n      actionOpts\n    );\n  };\n  this.move = function(movementArg, actionOpts = {}) {\n    movementArg = handleFunctionalArg(movementArg);\n    let bookEndQueueItems = _generateTemporaryOptionQueueItems(actionOpts);\n    let { instant, to } = actionOpts;\n    let numberOfSteps = countStepsToSelector({\n      queueItems: _queue.getTypeable(),\n      selector: movementArg === null ? \"\" : movementArg,\n      to,\n      cursorPosition: _getDerivedCursorPosition()\n    });\n    let directionalStep = numberOfSteps < 0 ? -1 : 1;\n    _predictedCursorPosition = _getDerivedCursorPosition() + numberOfSteps;\n    return _queueAndReturn(\n      [\n        bookEndQueueItems[0],\n        ...duplicate(\n          {\n            func: () => _move(directionalStep),\n            delay: instant ? 0 : _getPace(),\n            cursorable: true\n          },\n          Math.abs(numberOfSteps)\n        ),\n        bookEndQueueItems[1]\n      ],\n      actionOpts\n    );\n  };\n  this.options = function(opts, actionOpts = {}) {\n    opts = handleFunctionalArg(opts);\n    _options(opts);\n    return _queueAndReturn({}, actionOpts);\n  };\n  this.pause = function(milliseconds, actionOpts = {}) {\n    return _queueAndReturn(\n      { delay: handleFunctionalArg(milliseconds) },\n      actionOpts\n    );\n  };\n  this.type = function(string, actionOpts = {}) {\n    string = handleFunctionalArg(string);\n    let { instant } = actionOpts;\n    let bookEndQueueItems = _generateTemporaryOptionQueueItems(actionOpts);\n    let chars = maybeChunkStringAsHtml(string, _opts.html);\n    let charsAsQueueItems = chars.map((char) => {\n      return {\n        func: () => _type(char),\n        char,\n        delay: instant || isNonVoidElement(char) ? 0 : _getPace(),\n        typeable: char.nodeType === Node.TEXT_NODE\n      };\n    });\n    let itemsToQueue = [\n      bookEndQueueItems[0],\n      { func: async () => await _opts.beforeString(string, this) },\n      ...charsAsQueueItems,\n      { func: async () => await _opts.afterString(string, this) },\n      bookEndQueueItems[1]\n    ];\n    return _queueAndReturn(itemsToQueue, actionOpts);\n  };\n  this.is = function(key) {\n    return _statuses[key];\n  };\n  this.destroy = function(shouldRemoveCursor = true) {\n    _timeouts = destroyTimeouts(_timeouts);\n    handleFunctionalArg(shouldRemoveCursor) && _cursor && _removeNode(_cursor);\n    _statuses.destroyed = true;\n  };\n  this.freeze = function() {\n    _statuses.frozen = true;\n  };\n  this.unfreeze = () => {\n  };\n  this.reset = function(rebuild) {\n    !this.is(\"destroyed\") && this.destroy();\n    if (rebuild) {\n      _queue.wipe();\n      rebuild(this);\n    } else {\n      _queue.reset();\n    }\n    _cursorPosition = 0;\n    for (let property in _statuses) {\n      _statuses[property] = false;\n    }\n    _element[_elementIsInput() ? \"value\" : \"innerHTML\"] = \"\";\n    return this;\n  };\n  this.go = function() {\n    if (_statuses.started) {\n      return this;\n    }\n    _attachCursor();\n    if (!_opts.waitUntilVisible) {\n      _fire();\n      return this;\n    }\n    fireWhenVisible(_element, _fire.bind(this));\n    return this;\n  };\n  this.flush = function(cb = () => {\n  }) {\n    _attachCursor();\n    _fire(false).then(cb);\n    return this;\n  };\n  this.getQueue = () => _queue;\n  this.getOptions = () => _opts;\n  this.updateOptions = (options2) => _options(options2);\n  this.getElement = () => _element;\n  let _element = selectorToElement(element);\n  let _timeouts = [];\n  let _cursorPosition = 0;\n  let _predictedCursorPosition = null;\n  let _statuses = merge({}, DEFAULT_STATUSES);\n  options.cursor = processCursorOptions(\n    options.cursor ?? DEFAULT_OPTIONS.cursor\n  );\n  let _opts = merge(DEFAULT_OPTIONS, options);\n  _opts = merge(_opts, {\n    html: !_elementIsInput() && _opts.html,\n    nextStringDelay: calculateDelay(_opts.nextStringDelay),\n    loopDelay: calculateDelay(_opts.loopDelay)\n  });\n  let _id = generateHash();\n  let _queue = Queue([{ delay: _opts.startDelay }]);\n  _element.dataset.typeitId = _id;\n  appendStyleBlock(PLACEHOLDER_CSS);\n  let _shouldRenderCursor = !!_opts.cursor && !_elementIsInput();\n  let _cursor = _setUpCursor();\n  _opts.strings = _maybePrependHardcodedStrings(asArray(_opts.strings));\n  if (_opts.strings.length) {\n    _generateQueue();\n  }\n};\nexport {\n  TypeIt as default\n};\n"],
  "mappings": "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",
  "names": []
}
